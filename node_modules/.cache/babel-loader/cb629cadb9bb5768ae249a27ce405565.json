{"ast":null,"code":"var _jsxFileName = \"/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useContext, useEffect } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport styles from './Checkout.module.css';\nimport CartContext from '../../storage/cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === '';\n\nconst isSixChars = value => value.trim().length === 6;\n\nconst Checkout = props => {\n  _s();\n\n  //-----------------------------STRIPE-----------------------------//\n  const stripe = useStripe();\n  const elements = useElements();\n  const [paymentRequest, setPaymentRequest] = useState(null); //-----------------------------STRIPE-----------------------------//\n\n  const cartContext = useContext(CartContext);\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n  useEffect(() => {\n    if (stripe) {\n      const pr = stripe.paymentRequest({\n        country: 'Canada',\n        currency: 'cad',\n        total: {\n          label: 'Demo total',\n          amount: cartContext.totalAmount\n        },\n        requestPayerName: true,\n        requestPayerEmail: true\n      });\n    }\n  }, [stripe]);\n\n  const confirmHandler = async event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enterNameIsValid = !isEmpty(enteredName);\n    const enterStreetIsValid = !isEmpty(enteredStreet);\n    const enterCityIsValid = !isEmpty(enteredCity);\n    const enterPostalIsValid = isSixChars(enteredPostal);\n    setFormInputsValidity({\n      name: enterNameIsValid,\n      street: enterStreetIsValid,\n      city: enterCityIsValid,\n      postalCode: enterPostalIsValid\n    });\n    const formIsValid = enterNameIsValid && enterStreetIsValid && enterCityIsValid && enterPostalIsValid;\n\n    if (!formIsValid) {\n      return;\n    } //-----------------------------STRIPE-----------------------------//\n\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    } // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n\n\n    const cardElement = elements.getElement(CardElement); // Use your card Element with other Stripe.js APIs\n    //-----------------------------STRIPE-----------------------------//\n\n    props.onSubmit({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostal\n    });\n  };\n\n  const nameControlStyle = `${styles.control} ${formInputsValidity.name ? '' : styles.invalid}`;\n  const streetControlStyle = `${styles.control} ${formInputsValidity.street ? '' : styles.invalid}`;\n  const postalControlStyle = `${styles.control} ${formInputsValidity.postalCode ? '' : styles.invalid}`;\n  const cityControlStyle = `${styles.control} ${formInputsValidity.city ? '' : styles.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalControlStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid Postal Code!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CardElement, {\n        options: {\n          base: {\n            fontSize: \"20px\"\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Powerby Stripe.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !stripe,\n        className: styles.submit,\n        children: [\"Pay CAD \", cartContext.totalAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"NzkV2DHn06t+sMyoowkubeTCGvc=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Cart/Checkout.js"],"names":["useRef","useState","useContext","useEffect","CardElement","useStripe","useElements","styles","CartContext","isEmpty","value","trim","isSixChars","length","Checkout","props","stripe","elements","paymentRequest","setPaymentRequest","cartContext","formInputsValidity","setFormInputsValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalInputRef","cityInputRef","pr","country","currency","total","label","amount","totalAmount","requestPayerName","requestPayerEmail","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enterNameIsValid","enterStreetIsValid","enterCityIsValid","enterPostalIsValid","formIsValid","cardElement","getElement","onSubmit","nameControlStyle","control","invalid","streetControlStyle","postalControlStyle","cityControlStyle","form","base","fontSize","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef, useState, useContext, useEffect } from 'react';\nimport {CardElement, useStripe, useElements} from '@stripe/react-stripe-js';\nimport styles from './Checkout.module.css';\nimport CartContext from '../../storage/cart-context';\n\nconst isEmpty = (value) => value.trim() === '';\nconst isSixChars = (value) => value.trim().length === 6;\n\nconst Checkout = (props) => {\n    //-----------------------------STRIPE-----------------------------//\n    const stripe = useStripe();\n    const elements = useElements();\n    const [paymentRequest, setPaymentRequest] = useState(null);\n    //-----------------------------STRIPE-----------------------------//\n    const cartContext = useContext(CartContext);\n    const [formInputsValidity, setFormInputsValidity] = useState({\n        name: true,\n        street: true,\n        city: true,\n        postalCode: true\n    });\n    const nameInputRef = useRef();\n    const streetInputRef = useRef();\n    const postalInputRef = useRef();\n    const cityInputRef = useRef();\n\n    useEffect(() => {\n        if (stripe) {\n          const pr = stripe.paymentRequest({\n            country: 'Canada',\n            currency: 'cad',\n            total: {\n              label: 'Demo total',\n              amount: cartContext.totalAmount,\n            },\n            requestPayerName: true,\n            requestPayerEmail: true,\n          });\n        }\n      }, [stripe]);\n    const confirmHandler = async (event) => {\n        event.preventDefault();\n        \n        const enteredName = nameInputRef.current.value;\n        const enteredStreet = streetInputRef.current.value;\n        const enteredPostal = postalInputRef.current.value;\n        const enteredCity = cityInputRef.current.value;\n\n        const enterNameIsValid = !isEmpty(enteredName);\n        const enterStreetIsValid = !isEmpty(enteredStreet);\n        const enterCityIsValid = !isEmpty(enteredCity);\n        const enterPostalIsValid = isSixChars(enteredPostal);\n\n        setFormInputsValidity({\n            name: enterNameIsValid,\n            street: enterStreetIsValid,\n            city: enterCityIsValid,\n            postalCode: enterPostalIsValid\n        })\n\n        const formIsValid = enterNameIsValid && enterStreetIsValid && enterCityIsValid && enterPostalIsValid;\n\n        if (!formIsValid) {\n            return;\n        }\n        //-----------------------------STRIPE-----------------------------//\n        if (!stripe || !elements) {\n            // Stripe.js has not loaded yet. Make sure to disable\n            // form submission until Stripe.js has loaded.\n            return;\n          }\n      \n          // Get a reference to a mounted CardElement. Elements knows how\n          // to find your CardElement because there can only ever be one of\n          // each type of element.\n          const cardElement = elements.getElement(CardElement);\n      \n          // Use your card Element with other Stripe.js APIs\n\n        //-----------------------------STRIPE-----------------------------//\n        props.onSubmit({\n            name: enteredName,\n            street: enteredStreet,\n            city: enteredCity,\n            postalCode: enteredPostal\n        });\n        \n    };\n\n    const nameControlStyle = `${styles.control} ${formInputsValidity.name ? '' : styles.invalid}`;\n    const streetControlStyle = `${styles.control} ${formInputsValidity.street ? '' : styles.invalid}`;\n    const postalControlStyle = `${styles.control} ${formInputsValidity.postalCode ? '' : styles.invalid}`;\n    const cityControlStyle = `${styles.control} ${formInputsValidity.city ? '' : styles.invalid}`;\n\n\n    return (\n    <form className={styles.form} onSubmit={confirmHandler}>\n        <div className={nameControlStyle}>\n            <label htmlFor='name'>Your Name</label>\n            <input type='text' id='name' ref={nameInputRef}/>\n            {!formInputsValidity.name && <p>Please enter a valid name!</p>}\n        </div>\n        <div className={streetControlStyle}>\n            <label htmlFor='street'>Street</label>\n            <input type='text' id='street' ref={streetInputRef}/>\n            {!formInputsValidity.street && <p>Please enter a valid street!</p>}\n        </div>\n        <div className={postalControlStyle}>\n            <label htmlFor='postal'>Postal Code</label>\n            <input type='text' id='postal' ref={postalInputRef}/>\n            {!formInputsValidity.postalCode && <p>Please enter a valid Postal Code!</p>}\n        </div>\n        <div className={cityControlStyle}>\n            <label htmlFor='city'>City</label>\n            <input type='text' id='city' ref={cityInputRef}/>\n            {!formInputsValidity.city && <p>Please enter a valid city!</p>}\n        </div>\n        <div>\n            <CardElement\n                options={{\n                    base: {\n                        fontSize: \"20px\"\n                    }\n                }}\n            />\n        </div>\n        <p>Powerby Stripe.com</p>\n        <div className={styles.actions}>\n            <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n            <button type=\"submit\" disabled={!stripe} className={styles.submit}>Pay CAD {cartContext.totalAmount}</button>\n        </div>\n    </form>\n    )\n};\n\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}