{"ast":null,"code":"var _jsxFileName = \"/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport styles from './Cart.module.css';\nimport Modal from '../UI/Modal';\nimport CartContext from '../../storage/cart-context';\nimport CartItem from './CartItem';\nimport Checkout from './Checkout';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('pk_test_51JdSEwK8QP9eaYgIrRAGcwaOZFM8c4sD6ChxsTFkjIV1WUdBThge04Nin20mJf8xuCsxngfN5GaxDd3rBJz54wiJ00S1opVFEz');\n\nconst Cart = props => {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmitted, setDidSubmitted] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const submitOrderHandler = async useData => {\n    setIsSubmitting(true);\n    await fetch('https://food-order-app-3b13d-default-rtdb.firebaseio.com/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        uesr: useData,\n        orderedItems: cartCtx.items\n      })\n    });\n    setIsSubmitting(false);\n    setDidSubmitted(true);\n    cartCtx.clearCart();\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item),\n      disabled: isCheckout ? true : false\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n\n  const modalAction = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles['button--alt'],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onSubmit: submitOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 28\n    }, this), !isCheckout && modalAction]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 30\n  }, this);\n\n  const isSubmittingModalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Sending order data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 38\n  }, this);\n\n  const didSubmitModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Order payment successful!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [!isSubmitting && !didSubmitted && cartModalContent, isSubmitting && isSubmittingModalContent, !isSubmitting && didSubmitted && didSubmitModalContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cart, \"PPtz+zkwICddFrzVK5IfYbSiS/g=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Cart/Cart.js"],"names":["React","useContext","useState","styles","Modal","CartContext","CartItem","Checkout","Elements","loadStripe","stripePromise","Cart","props","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmitted","setDidSubmitted","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","orderHandler","submitOrderHandler","useData","fetch","method","body","JSON","stringify","uesr","orderedItems","clearCart","cartItems","map","name","price","bind","modalAction","actions","onClose","button","cartModalContent","total","isSubmittingModalContent","didSubmitModalContent"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport styles from './Cart.module.css';\nimport Modal from '../UI/Modal';\nimport CartContext from '../../storage/cart-context';\nimport CartItem from './CartItem';\nimport Checkout from './Checkout';\nimport {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\n\nconst stripePromise = loadStripe('pk_test_51JdSEwK8QP9eaYgIrRAGcwaOZFM8c4sD6ChxsTFkjIV1WUdBThge04Nin20mJf8xuCsxngfN5GaxDd3rBJz54wiJ00S1opVFEz');\n\nconst Cart = (props) => {\n    \n    const [isCheckout, setIsCheckout] = useState();\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [didSubmitted, setDidSubmitted] = useState(false);\n    const cartCtx = useContext(CartContext);\n    const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n    const hasItems = cartCtx.items.length > 0;\n\n    const cartItemRemoveHandler = (id) => {\n        cartCtx.removeItem(id);\n    };\n\n    const cartItemAddHandler = (item) => {\n        cartCtx.addItem({ ...item, amount: 1 });\n    }\n\n    const orderHandler = () => {\n        setIsCheckout(true);\n    }\n\n    const submitOrderHandler = async (useData) => {\n        setIsSubmitting(true);\n        await fetch('https://food-order-app-3b13d-default-rtdb.firebaseio.com/orders.json',{\n            method: 'POST',\n            body: JSON.stringify({\n                uesr: useData,\n                orderedItems: cartCtx.items\n            })\n        });\n        setIsSubmitting(false);\n        setDidSubmitted(true);\n        cartCtx.clearCart();\n    };\n\n    const cartItems = (\n        <ul className={styles['cart-items']}>\n            {cartCtx.items.map((item) => (\n                <CartItem\n                    key={item.id}\n                    name={item.name}\n                    amount={item.amount}\n                    price={item.price}\n                    onRemove={cartItemRemoveHandler.bind(null, item.id)}\n                    onAdd={cartItemAddHandler.bind(null, item)}\n                    disabled={isCheckout ? true : false}\n                />\n            ))}\n        </ul>\n    )\n    \n\n    const modalAction = (\n        <div className={styles.actions}>\n            <button className={styles['button--alt']} onClick={props.onClose}>Close</button>\n            {hasItems && <button className={styles.button} onClick={orderHandler}>Order</button>}\n        </div>\n    )\n\n    const cartModalContent = <Elements stripe={stripePromise}>\n        {cartItems}\n            <div className={styles.total}>\n                <span>Total Amount</span>\n                <span>{totalAmount}</span>\n            </div>\n            {isCheckout && <Checkout onSubmit={submitOrderHandler} onCancel={props.onClose}/>}\n            {!isCheckout && modalAction}\n    </Elements>\n\n    const isSubmittingModalContent = <p>Sending order data...</p>;\n\n    const didSubmitModalContent = (\n        <React.Fragment>\n            <p>Order payment successful!</p>\n            <div className={styles.actions}>\n                <button className={styles.button} onClick={props.onClose}>Close</button>\n            </div>\n        </React.Fragment>\n    )\n    \n    return (\n        <Modal onClose={props.onClose}>\n            {!isSubmitting && !didSubmitted && cartModalContent}\n            {isSubmitting && isSubmittingModalContent}\n            {!isSubmitting && didSubmitted && didSubmitModalContent}\n        </Modal>\n    );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}