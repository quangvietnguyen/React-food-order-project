{"ast":null,"code":"var _jsxFileName = \"/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Cart/CheckoutForm.js\",\n    _s = $RefreshSig$();\n\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport styles from './CheckoutForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckoutForm = () => {\n  _s();\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    // Block native form submission.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    } // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n\n\n    const cardElement = elements.getElement(CardElement); // Use your card Element with other Stripe.js APIs\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement\n    });\n\n    if (error) {\n      console.log('[error]', error);\n    } else {\n      console.log('[PaymentMethod]', paymentMethod);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {\n      options: {\n        style: {\n          base: {\n            fontSize: '16px',\n            color: '#424770',\n            '::placeholder': {\n              color: '#aab7c4'\n            }\n          },\n          invalid: {\n            color: '#9e2146'\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe,\n      style: {\n        font: 'inherit',\n        color: '#5a1a01',\n        cursor: 'pointer',\n        backgroundColor: 'transparent',\n        border: 'none',\n        borderRadius: '25px',\n        padding: '0.5rem 2rem'\n      },\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutForm, \"EKvoGMX7lxsZ5SGPpYu2aKFzClQ=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Cart/CheckoutForm.js"],"names":["CardElement","useStripe","useElements","styles","CheckoutForm","stripe","elements","handleSubmit","event","preventDefault","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","console","log","form","style","base","fontSize","color","invalid","font","cursor","backgroundColor","border","borderRadius","padding"],"mappings":";;;AAAA,SAAQA,WAAR,EAAqBC,SAArB,EAAgCC,WAAhC,QAAkD,yBAAlD;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAMK,QAAQ,GAAGJ,WAAW,EAA5B;;AAEA,QAAMK,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpC;AACAA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI,CAACJ,MAAD,IAAW,CAACC,QAAhB,EAA0B;AACxB;AACA;AACA;AACD,KARmC,CAUpC;AACA;AACA;;;AACA,UAAMI,WAAW,GAAGJ,QAAQ,CAACK,UAAT,CAAoBX,WAApB,CAApB,CAboC,CAepC;;AACA,UAAM;AAACY,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAyB,MAAMR,MAAM,CAACS,mBAAP,CAA2B;AAC9DC,MAAAA,IAAI,EAAE,MADwD;AAE9DC,MAAAA,IAAI,EAAEN;AAFwD,KAA3B,CAArC;;AAKA,QAAIE,KAAJ,EAAW;AACTK,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,KAAvB;AACD,KAFD,MAEO;AACLK,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,aAA/B;AACD;AACF,GA1BD;;AA4BA,sBACE;AAAM,IAAA,SAAS,EAAEV,MAAM,CAACgB,IAAxB;AAA8B,IAAA,QAAQ,EAAEZ,YAAxC;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,OAAO,EAAE;AACLa,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAE;AACFC,YAAAA,QAAQ,EAAE,MADR;AAEFC,YAAAA,KAAK,EAAE,SAFL;AAGF,6BAAiB;AACbA,cAAAA,KAAK,EAAE;AADM;AAHf,WADH;AAQHC,UAAAA,OAAO,EAAE;AACLD,YAAAA,KAAK,EAAE;AADF;AARN;AADF;AADX;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAE,CAAClB,MAAjC;AACA,MAAA,KAAK,EAAE;AACLoB,QAAAA,IAAI,EAAE,SADD;AAELF,QAAAA,KAAK,EAAE,SAFF;AAGLG,QAAAA,MAAM,EAAE,SAHH;AAILC,QAAAA,eAAe,EAAE,aAJZ;AAKLC,QAAAA,MAAM,EAAE,MALH;AAMLC,QAAAA,YAAY,EAAE,MANT;AAOLC,QAAAA,OAAO,EAAE;AAPJ,OADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAjED;;GAAM1B,Y;UACWH,S,EACEC,W;;;KAFbE,Y;AAmEN,eAAeA,YAAf","sourcesContent":["import {CardElement, useStripe, useElements} from '@stripe/react-stripe-js';\nimport styles from './CheckoutForm.module.css';\n\nconst CheckoutForm = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async (event) => {\n    // Block native form submission.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    }\n\n    // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n    const cardElement = elements.getElement(CardElement);\n\n    // Use your card Element with other Stripe.js APIs\n    const {error, paymentMethod} = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement,\n    });\n\n    if (error) {\n      console.log('[error]', error);\n    } else {\n      console.log('[PaymentMethod]', paymentMethod);\n    }\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <CardElement\n        options={{\n            style: {\n                base: {\n                    fontSize: '16px',\n                    color: '#424770',\n                    '::placeholder': {\n                        color: '#aab7c4',\n                    },\n                },\n                invalid: {\n                    color: '#9e2146',\n                }\n            },\n        }}\n        />\n      <button type=\"submit\" disabled={!stripe}\n      style={{\n        font: 'inherit',\n        color: '#5a1a01',\n        cursor: 'pointer',\n        backgroundColor: 'transparent',\n        border: 'none',\n        borderRadius: '25px',\n        padding: '0.5rem 2rem'\n      }}\n      >\n        Pay\n      </button>\n    </form>\n  );\n};\n\nexport default CheckoutForm;"]},"metadata":{},"sourceType":"module"}