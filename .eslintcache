[{"/Users/vietqnguyen/Desktop/React/03-food-order-project/src/index.js":"1","/Users/vietqnguyen/Desktop/React/03-food-order-project/src/App.js":"2","/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Layout/Header.js":"3","/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Layout/HeaderCartButton.js":"4","/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Cart/CartIcon.js":"5","/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Meals/MealsSummary.js":"6","/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Meals/Meals.js":"7","/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Meals/AvailableMeals.js":"8","/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/UI/Card.js":"9","/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Meals/MealItem/MealItem.js":"10","/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Meals/MealItem/MealItemForm.js":"11","/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/UI/Input.js":"12","/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Cart/Cart.js":"13","/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/UI/Modal.js":"14","/Users/vietqnguyen/Desktop/React/03-food-order-project/src/storage/CartProvider.js":"15","/Users/vietqnguyen/Desktop/React/03-food-order-project/src/storage/cart-context.js":"16","/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Cart/CartItem.js":"17","/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Cart/Checkout.js":"18"},{"size":142,"mtime":1616612952000,"results":"19","hashOfConfig":"20"},{"size":664,"mtime":1631855387256,"results":"21","hashOfConfig":"20"},{"size":599,"mtime":1631854398448,"results":"22","hashOfConfig":"20"},{"size":1262,"mtime":1631865072695,"results":"23","hashOfConfig":"20"},{"size":528,"mtime":1631802824109,"results":"24","hashOfConfig":"20"},{"size":600,"mtime":1631805233859,"results":"25","hashOfConfig":"20"},{"size":296,"mtime":1631805162472,"results":"26","hashOfConfig":"20"},{"size":1913,"mtime":1632532455404,"results":"27","hashOfConfig":"20"},{"size":171,"mtime":1631805443129,"results":"28","hashOfConfig":"20"},{"size":933,"mtime":1631860919830,"results":"29","hashOfConfig":"20"},{"size":1302,"mtime":1631860270736,"results":"30","hashOfConfig":"20"},{"size":332,"mtime":1631857633282,"results":"31","hashOfConfig":"20"},{"size":3409,"mtime":1632643215981,"results":"32","hashOfConfig":"20"},{"size":823,"mtime":1631854674975,"results":"33","hashOfConfig":"20"},{"size":2780,"mtime":1632542743372,"results":"34","hashOfConfig":"20"},{"size":220,"mtime":1632542729248,"results":"35","hashOfConfig":"20"},{"size":758,"mtime":1632644757863,"results":"36","hashOfConfig":"20"},{"size":6367,"mtime":1632564168105,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"99eicm",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},"/Users/vietqnguyen/Desktop/React/03-food-order-project/src/index.js",[],["76","77"],"/Users/vietqnguyen/Desktop/React/03-food-order-project/src/App.js",[],"/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Layout/Header.js",[],"/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Layout/HeaderCartButton.js",[],"/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Cart/CartIcon.js",[],"/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Meals/MealsSummary.js",[],"/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Meals/Meals.js",[],"/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Meals/AvailableMeals.js",[],"/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/UI/Card.js",[],"/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Meals/MealItem/MealItem.js",[],"/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Meals/MealItem/MealItemForm.js",[],"/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/UI/Input.js",[],"/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Cart/Cart.js",[],"/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/UI/Modal.js",[],"/Users/vietqnguyen/Desktop/React/03-food-order-project/src/storage/CartProvider.js",[],"/Users/vietqnguyen/Desktop/React/03-food-order-project/src/storage/cart-context.js",[],"/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Cart/CartItem.js",[],"/Users/vietqnguyen/Desktop/React/03-food-order-project/src/components/Cart/Checkout.js",["78","79","80"],"import { useRef, useState, useContext, useEffect } from 'react';\nimport {CardElement, useStripe, useElements} from '@stripe/react-stripe-js';\nimport styles from './Checkout.module.css';\nimport CartContext from '../../storage/cart-context';\n\nconst isEmpty = (value) => value.trim() === '';\nconst isSixChars = (value) => value.trim().length === 6;\n\nconst Checkout = (props) => {\n    //-----------------------------STRIPE-----------------------------//\n    const stripe = useStripe();\n    const elements = useElements();\n    const [paymentRequest, setPaymentRequest] = useState(null);\n    // useEffect(() => {\n    //     if (stripe) {\n    //         const pr = stripe.paymentRequest({\n    //             country: 'CA',\n    //             currency: 'cad',\n    //             total: {\n    //               label: 'Demo total',\n    //               amount: Math.round(cartContext.totalAmount),\n    //             },\n    //             requestPayerName: true,\n    //             requestPayerEmail: true,\n    //             //card: cardElement,\n    //           });\n    //     }\n    // },[stripe])\n    //-----------------------------STRIPE-----------------------------//\n    const cartContext = useContext(CartContext);\n    const [formInputsValidity, setFormInputsValidity] = useState({\n        name: true,\n        street: true,\n        city: true,\n        postalCode: true\n    });\n    const nameInputRef = useRef();\n    const streetInputRef = useRef();\n    const postalInputRef = useRef();\n    const cityInputRef = useRef();\n\n    const confirmHandler = async (event) => {\n        event.preventDefault();\n        \n        const enteredName = nameInputRef.current.value;\n        const enteredStreet = streetInputRef.current.value;\n        const enteredPostal = postalInputRef.current.value;\n        const enteredCity = cityInputRef.current.value;\n\n        const enterNameIsValid = !isEmpty(enteredName);\n        const enterStreetIsValid = !isEmpty(enteredStreet);\n        const enterCityIsValid = !isEmpty(enteredCity);\n        const enterPostalIsValid = isSixChars(enteredPostal);\n\n        setFormInputsValidity({\n            name: enterNameIsValid,\n            street: enterStreetIsValid,\n            city: enterCityIsValid,\n            postalCode: enterPostalIsValid\n        })\n\n        const formIsValid = enterNameIsValid && enterStreetIsValid && enterCityIsValid && enterPostalIsValid;\n\n        if (!formIsValid) {\n            return;\n        }\n        //-----------------------------STRIPE-----------------------------//\n        if (!stripe || !elements) {\n            // Stripe.js has not loaded yet. Make sure to disable\n            // form submission until Stripe.js has loaded.\n            return;\n          }\n      \n          // Get a reference to a mounted CardElement. Elements knows how\n          // to find your CardElement because there can only ever be one of\n          // each type of element.\n          const cardElement = elements.getElement(CardElement);\n      \n          // Use your card Element with other Stripe.js APIs\n          const {error, paymentMethod} = await stripe.createPaymentMethod({\n            type: 'card',\n            card: cardElement,\n          });\n            \n      \n          if (error) {\n            console.log('[error]', error);\n          } else {\n            console.log('[PaymentMethod]', paymentMethod);\n          }\n\n        //-----------------------------STRIPE-----------------------------//\n        props.onSubmit({\n            name: enteredName,\n            street: enteredStreet,\n            city: enteredCity,\n            postalCode: enteredPostal\n        });\n        \n    };\n\n    const nameControlStyle = `${styles.control} ${formInputsValidity.name ? '' : styles.invalid}`;\n    const streetControlStyle = `${styles.control} ${formInputsValidity.street ? '' : styles.invalid}`;\n    const postalControlStyle = `${styles.control} ${formInputsValidity.postalCode ? '' : styles.invalid}`;\n    const cityControlStyle = `${styles.control} ${formInputsValidity.city ? '' : styles.invalid}`;\n    \n    return (\n    <form className={styles.form} onSubmit={confirmHandler}>\n        <div className={nameControlStyle}>\n            <label htmlFor='name'>Your Name</label>\n            <input type='text' id='name' ref={nameInputRef}/>\n            {!formInputsValidity.name && <p>Please enter a valid name!</p>}\n        </div>\n        <div className={streetControlStyle}>\n            <label htmlFor='street'>Street</label>\n            <input type='text' id='street' ref={streetInputRef}/>\n            {!formInputsValidity.street && <p>Please enter a valid street!</p>}\n        </div>\n        <div className={postalControlStyle}>\n            <label htmlFor='postal'>Postal Code</label>\n            <input type='text' id='postal' ref={postalInputRef}/>\n            {!formInputsValidity.postalCode && <p>Please enter a valid Postal Code!</p>}\n        </div>\n        <div className={cityControlStyle}>\n            <label htmlFor='city'>City</label>\n            <input type='text' id='city' ref={cityInputRef}/>\n            {!formInputsValidity.city && <p>Please enter a valid city!</p>}\n        </div>\n        <div className={styles.control}>\n            <label htmlFor='payment'>Payment Method</label>\n            <div style={{border:'1px solid #ccc', padding:'3px', borderRadius:'4px'}}>\n                <CardElement\n                    id='payment'\n                    options={{\n                        style: {\n                        base: {\n                            fontSize: '20px',\n                            color: '#424770',\n                            '::placeholder': {\n                            color: '#aab7c4',\n                            },\n                        },\n                        invalid: {\n                            color: '#9e2146',\n                        },\n                        },\n                    }}\n                />\n            </div>\n        </div>\n        <p>Powerby Stripe.com</p>\n        <div className={styles.actions}>\n            <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n            <button\n                type=\"submit\"\n                disabled={!stripe}\n                className={styles.submit}\n            >\n                Pay CAD {cartContext.totalAmount.toFixed(2)}\n            </button>\n        </div>\n    </form>\n    )\n};\n\nexport default Checkout;",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":40,"nodeType":"87","messageId":"88","endLine":1,"endColumn":49},{"ruleId":"85","severity":1,"message":"89","line":13,"column":12,"nodeType":"87","messageId":"88","endLine":13,"endColumn":26},{"ruleId":"85","severity":1,"message":"90","line":13,"column":28,"nodeType":"87","messageId":"88","endLine":13,"endColumn":45},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'paymentRequest' is assigned a value but never used.","'setPaymentRequest' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]